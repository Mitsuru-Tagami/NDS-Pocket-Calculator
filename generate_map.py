#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys

# This is a manually verified, correct mapping for single hiragana characters.
# It is used to override the output from the Mozc tsv file if needed,
# as the tsv contains some mappings that are not single characters (e.g., kya -> きゃ)
# or have different goals (lyu -> ゅ). We only want single character outputs.
MANUAL_MAP = {
    'a': 'あ', 'i': 'い', 'u': 'う', 'e': 'え', 'o': 'お',
    'ka': 'か', 'ki': 'き', 'ku': 'く', 'ke': 'け', 'ko': 'こ',
    'sa': 'さ', 'shi': 'し', 'si': 'し', 'su': 'す', 'se': 'せ', 'so': 'そ',
    'ta': 'た', 'chi': 'ち', 'ti': 'ち', 'tsu': 'つ', 'tu': 'つ', 'te': 'て', 'to': 'と',
    'na': 'な', 'ni': 'に', 'nu': 'ぬ', 'ne': 'ね', 'no': 'の',
    'ha': 'は', 'hi': 'ひ', 'fu': 'ふ', 'hu': 'ふ', 'he': 'へ', 'ho': 'ほ',
    'ma': 'ま', 'mi': 'み', 'mu': 'む', 'me': 'め', 'mo': 'も',
    'ya': 'や', 'yu': 'ゆ', 'yo': 'よ',
    'ra': 'ら', 'ri': 'り', 'ru': 'る', 're': 'れ', 'ro': 'ろ',
    'wa': 'わ', 'wo': 'を',
    'ga': 'が', 'gi': 'ぎ', 'gu': 'ぐ', 'ge': 'げ', 'go': 'ご',
    'za': 'ざ', 'ji': 'じ', 'zi': 'じ', 'zu': 'ず', 'ze': 'ぜ', 'zo': 'ぞ',
    'da': 'だ', 'di': 'ぢ', 'du': 'づ', 'de': 'で', 'do': 'ど',
    'ba': 'ば', 'bi': 'び', 'bu': 'ぶ', 'be': 'べ', 'bo': 'ぼ',
    'pa': 'ぱ', 'pi': 'ぴ', 'pu': 'ぷ', 'pe': 'ぺ', 'po': 'ぽ',
    'n': 'ん', 'nn': 'ん', "n'": 'ん',
    '-': 'ー',
    'xa': 'ぁ', 'xi': 'ぃ', 'xu': 'ぅ', 'xe': 'ぇ', 'xo': 'ぉ',
    'xya': 'ゃ', 'xyu': 'ゅ', 'xyo': 'ょ',
    'xtu': 'っ',
}

def main():
    entries = []
    processed_romaji = set()

    # Use our manually verified map as the source of truth
    for romaji, hiragana in MANUAL_MAP.items():
        try:
            sjis_bytes = hiragana.encode('shift_jis')
            if len(sjis_bytes) == 2:
                sjis_code = (sjis_bytes[0] << 8) | sjis_bytes[1]
                entries.append((romaji, sjis_code))
                processed_romaji.add(romaji)
            elif len(sjis_bytes) == 1:
                sjis_code = sjis_bytes[0]
                entries.append((romaji, sjis_code))
                processed_romaji.add(romaji)
        except UnicodeEncodeError:
            print(f"Could not encode {hiragana}", file=sys.stderr)
            continue

    # Sort by romaji length, descending, to ensure longest match is found first
    entries.sort(key=lambda x: len(x[0]), reverse=True)

    # Print C header
    print("/* This file is automatically generated by generate_map.py */")
    print("#ifndef ROMAKANA_MAP_H_")
    print("#define ROMAKANA_MAP_H_")
    print("\n#include <nds.h>\n")
    print("typedef struct {")
    print("    const char* romaji;")
    print("    u16 sjis_code;")
    print("} RomajiKanaMap;")
    print("\nconst RomajiKanaMap romakana_map[] = {")

    for romaji, sjis_code in entries:
        c_romaji = romaji.replace('\\', '\\\\').replace('"', '\"')
        print(f'    {{"{c_romaji}", 0x{sjis_code:04x}}},')

    print("    {NULL, 0}")
    print("};")
    print("\n#endif  // ROMAKANA_MAP_H_")

if __name__ == '__main__':
    main()
